	
	function coinremitter_cryptobox_update_page(data, imgdir_path, logoimg_path, ext)
	{
                
		/*if (jQuery.type( data ) === "string") 	data = jQuery.parseJSON(atob(data)); 
		if (typeof imgdir_path !== 'string') 	imgdir_path = 'images/';	else 	imgdir_path = atob(imgdir_path);
		if (typeof logoimg_path !== 'string') 	logoimg_path = 'default';  	else 	logoimg_path = atob(logoimg_path);
		if (typeof ext !== 'string') 			ext = 'crcrypto_';			else 	ext = atob(ext);*/

		if (jQuery.type( data ) === "string") 	data = jQuery.parseJSON(data); 
		if (typeof imgdir_path !== 'string') 	imgdir_path = 'images/';	else 	imgdir_path = imgdir_path;
		if (typeof logoimg_path !== 'string') 	logoimg_path = 'default';  	else 	logoimg_path = logoimg_path;
		if (typeof ext !== 'string') 			ext = 'crcrypto_';			else 	ext = ext;


//		console.log(data);
		jQuery('.mncrpt a.dropdown-item, .'+ext+'button_confirm, .'+ext+'button_wait, .'+ext+'button_error, .'+ext+'refresh, .mncrpt img.radioimage-select').click(function() { jQuery('.'+ext+'refresh, .'+ext+'msg').hide(); document.location.href = "#h"+ext.replace(/_\s*$/, ""); jQuery('.'+ext+'loading_icon').show(); });

		
		if (jQuery.type( data.coinName ) !== "string" || jQuery.type( data ) !== "object" || (data.payment_status  != 0 && data.payment_status  != 1))
		{
				if (jQuery.type( data.msg ) === "string" && data.msg) jQuery('.'+ext+'error_message').html('Error loading data !<br><br><b>'+data.msg+'</b>');
				else jQuery('.'+ext+'error_message').html('Error loading data ! Please contact the website administrator.');
				jQuery('.'+ext+'loader_button' ).fadeOut(400, function(){ jQuery('.'+ext+'loader').show(); jQuery('.'+ext+'cryptobox_error').fadeIn(400);  })
				jQuery('.'+ext+'cryptobox_error .'+ext+'coins_list').show();
				return false;
		}
		
		var coinName = data.coinName.toLowerCase();
		
		if (logoimg_path == "default")
		{
			var logoext = (coinName == 'bitcoin') ? '_en'  : '';
			var a = [];
			a['dash'] = ['de', 'es', 'nl', 'ru']; 
			a['dogecoin'] = ['cn', 'de', 'es', 'fr', 'hi', 'ru', 'zh']; 
			a['feathercoin'] = ['es', 'ru']; 
			a['litecoin'] = ['cn', 'de', 'es', 'fr', 'hi', 'nl', 'ru', 'zh']; 
			a['peercoin'] = ['es', 'ru']; 
			a['potcoin'] = ['es', 'ru']; 
			a['reddcoin'] = ['cn', 'es', 'fr', 'hi', 'ru', 'zh']; 
			a['speedcoin'] = ['cn', 'es', 'fr', 'hi', 'ru', 'zh']; 
			a['vertcoin'] = ['es', 'ru']; 
			if (a.hasOwnProperty(coinName) && jQuery.inArray('en', a[coinName]) != -1) logoext = '_en';
			var src = (data.boxtype == 'paymentbox') ? imgdir_path+coinName+'/payment'+logoext+'.png' : imgdir_path+coinName+'/captcha'+logoext+'.png'
		}
		else if (!logoimg_path) src = "";
		else src = logoimg_path;
		
		if (src == "") jQuery('.'+ext+'logo_image').hide();
		else jQuery('.'+ext+'logo_image').attr('src', src);

		var qrcodesize = (typeof jQuery('.'+ext+'qrcode_image').attr('data-size') === 'undefined') ? 110 : jQuery('.'+ext+'qrcode_image').attr('data-size');
		jQuery('.'+ext+'qrcode_image').attr('src', 'https://chart.googleapis.com/chart?chs='+qrcodesize+'x'+qrcodesize+'&chld=M|0&cht=qr&chl='+coinName+'%3A'+data.addr+'%3Famount%3D'+data.amount+'&choe=UTF-8'); 
		
		if (jQuery.isFunction(jQuery.fn.tooltip)) 
		{ 
                    var wait_hint = "Please send the exact "+coinName+" sum as shown - "+data.amount+" "+data.coinLabel+" (in one payment)! If you send any other sum, payment system will ignore the transaction and you will need to send the correct sum again, or contact the site owner for assistance. If you have already sent "+coinName+"s to the address above, please wait 1-2 min to receive them by Coinremitter payment system";
			jQuery('.'+ext+'wallet_address').attr('data-original-title', 'Open Wallet').attr('data-placement', 'bottom').attr('data-toggle', 'tooltip').tooltip();  
			jQuery('.'+ext+'wallet_open').attr('data-original-title', "It will open your "+coinName+" wallet with address and sum which you need to send and you will need to simply click Send button in wallet only. If your browser does not recognise the "+coinName+" link, simply use \"Copy Address\" button below and manually copy address and the amount to pay in your "+coinName+" wallet.".replace("\\n", " ")).attr('data-placement', 'bottom').attr('data-toggle', 'tooltip').tooltip();  
			jQuery('.'+ext+'qrcode_image').attr('data-original-title', "QR Code - "+coinName+" address and sum you can scan with a mobile phone camera. Open Bitcoin Wallet, click on camera icon, point the camera at the code, and you're done").attr('data-placement', 'bottom').attr('data-toggle', 'tooltip').tooltip(); 
			if (!(jQuery('.'+ext+'button_confirm').length)) jQuery('.'+ext+'button_wait').attr('data-original-title', wait_hint).attr('data-placement', 'top').attr('data-toggle', 'tooltip').tooltip();  
			jQuery('.'+ext+'button_confirm').attr('data-original-title', wait_hint).attr('data-placement', 'top').attr('data-toggle', 'tooltip').tooltip();  
			jQuery('.'+ext+'button_refresh, .'+ext+'refresh').attr('data-original-title', "Refresh").attr('data-placement', 'top').attr('data-toggle', 'tooltip').tooltip();  
			jQuery('.'+ext+'copy_address').attr('data-original-title', "Copy Address").attr('data-placement', 'top').attr('data-toggle', 'tooltip').tooltip();  
			jQuery('.'+ext+'copy_amount').css( 'cursor', 'pointer' ).attr('data-original-title', "Copy Amount").attr('data-placement', 'bottom').attr('data-toggle', 'tooltip').tooltip();  
			jQuery('.'+ext+'copy_transaction').css( 'cursor', 'pointer' ).attr('data-original-title', 'Copy Transaction ID').attr('data-placement', 'bottom').attr('data-toggle', 'tooltip').tooltip();  
		}
		
		jQuery('.'+ext+'paymentcaptcha_amount').text('Payment Amount');
		jQuery('.'+ext+'paymentcaptcha_status').text('Captcha Status');
//		jQuery('.'+ext+'wallet_open').attr("href", data.wallet_url);  
		jQuery('.'+ext+'wallet_address').html(data.addr);  

		var txt = '-';
		if (data.payment_status == 0 )  txt = '- Not Received -';
		else if (data.payment_status==1) txt = 'Payment Successfully Received!';

		jQuery('.'+ext+'paymentcaptcha_statustext').text(txt);


		
		// Buttons	
		if (data.payment_status == 1)
		{
			jQuery('.'+ext+'texts_btn_wait_hint').hide();
			jQuery('.'+ext+'button_wait').html('Payment Successfully Received!');
		}
		else
		{
			jQuery('.'+ext+'texts_btn_wait_hint').show();
			jQuery('.'+ext+'button_wait').html('<i class="fas fa-circle-notch fa-spin"></i> &#160; ' + ('Awaiting Payment From You'));
		}
		
		jQuery('.'+ext+'button_refresh').html('<i class="fas fa-sync-alt"></i>&#160; Refresh');
		
		
		
	

		// Payment Received Payment Box
		if (data.payment_status == 1)
		{
			jQuery('.'+ext+'paymentcaptcha_title').text('CoinRemitter Payment System');
			jQuery('.'+ext+'paymentcaptcha_successful').text('Payment Successfully Received!');
			jQuery('.'+ext+'paymentcaptcha_date').html(('Received on') + ' <b>' + data.paymentDate + '</b>');
			jQuery('.'+ext+'button_details').html('<span class="glyphicon glyphicon-'+((data.coinLabel=='BTC') ? 'bitcoin' : 'globe')+'"></span>&#160; View Transaction Details' );
			jQuery('.'+ext+'button_details').click(function() { newwindow=window.open(data.tx_url,'','height=800,width=1100'); if (window.focus) {newwindow.focus()} return false; });

			jQuery('.'+ext+'texts_pay_now').hide();
			jQuery('.'+ext+'texts_intro1').hide();
			jQuery('.'+ext+'texts_intro2').hide();
			jQuery('.'+ext+'texts_intro3').hide();
			jQuery('.'+ext+'coins_list').hide();
			//jQuery('.'+ext+'box_language').addClass('col-md-offset-3');
		}
		else jQuery('.'+ext+'coins_list').show();
		
		
		jQuery('.'+ext+'loader').fadeOut(400, function()
		{
			jQuery('.'+ext+'cryptobox_top, .'+ext+'cryptobox_rawdata').fadeIn(400);
			if (data.payment_status == 1) 
			{
				jQuery('.'+ext+'cryptobox_unpaid, .'+ext+'boxlogo_unpaid, .'+ext+'msg').hide(); 
				jQuery('.'+ext+'cryptobox_paid, .'+ext+'boxlogo_paid').fadeIn(400); 
			}
			else 
			{
				jQuery('.'+ext+'cryptobox_paid, .'+ext+'boxlogo_paid').hide();
				jQuery('.'+ext+'cryptobox_unpaid, .'+ext+'boxlogo_unpaid').fadeIn(400); 
			}
			jQuery('.'+ext+'msg').delay(10000).fadeOut(2000);
		}); 		

		
		
		// Raw Payment Data
		var html = "";
		jQuery.each(data, function(key, val)
		{
			if (typeof val === 'object')
			{
				var html2 = '<div style="margin-left:50px">';
				jQuery.each(val, function(key2, val2)
				{
					html2 += "[" + key2 + '] => ' + val2 + "<br>";
					jQuery('.' + ext + key + '_' + key2).html(val2);
				});
				val = html2 + '</div>';
			}
			else 
			{	
				if (key.indexOf("_url") > 0) jQuery('.' + ext + key).attr("href", val);
				else jQuery('.' + ext + key).html(val);
			}
			
			html += "[" + key + '] => ' + val + "<br>";
		});
		

		jQuery('.'+ext+'jsondata').html(html);
		jQuery('#dmgnpcode').delay(1000).show('slow');
		
		
		// copy amount/wallet address to clipboard icon
		jQuery( '.'+ext+'copy_address, .'+ext+'copy_amount, .'+ext+'copy_transaction' ).click( function()
		{
			var textArea = document.createElement( "textarea" );
			if ((jQuery(this).attr("class")).indexOf("copy_amount") > 0) textArea.value = data.amount;
			else if ((jQuery(this).attr("class")).indexOf("copy_transaction") > 0) textArea.value = data.tx_url;
			else textArea.value = data.addr;
			document.body.appendChild( textArea );
			textArea.select();
			
			try {
					var text = (document.execCommand( 'copy' )) ? 'Copied!' : 'Oops, unable to copy :(';
			} catch (err) {
					var text = 'Oops, unable to copy :(';
			}
			
			document.body.removeChild( textArea );
			
			if (jQuery.isFunction(jQuery.fn.tooltip))
			{
				var el = jQuery(this);
				el.tooltip('dispose');
				el.attr('data-original-title', text).tooltip('show');
			}
			
			return false;
		});

		
		return true;
	}
	
	


	
	jQuery(document).ready(function() 
	{
		// images in radio boxes
		jQuery('input.aradioimage').aradioimage();
	});



	(function(jQuery) {
		jQuery.fn.aradioimage = function( options ) {
			var defaults = {
					imgItemClass: 'radioimage-select',
					imgItemCheckedClass: 'radioimage-checked',
					hideLabel: true
				},

					syncClassChecked = function( img ) {
					var radioName = img.prev('input[type="radio"]').attr('name');

					jQuery('input[name="' + radioName + '"]').each(function() {
						var myImg = jQuery(this).next('img');
						if (jQuery(this).prop('checked') && typeof jQuery(this).data('url') !== 'undefined') window.location.href = jQuery(this).data('url');
					});
				};

			options = jQuery.extend( defaults, options );

			return this.each(function() {
				jQuery(this)
					.hide()
					.after('<img src="' + jQuery(this).data('image') + '" width="' + (jQuery(this).data('width')+18) + '" alt="' + jQuery(this).data('alt') + '" title="' + jQuery(this).data('title') + '" />');

				var img = jQuery(this).next('img');
				img.addClass(options.imgItemClass);

				if ( options.hideLabel ) {
					jQuery('label[for=' + jQuery(this).attr('id') + ']').hide();
				}

				if ( jQuery(this).prop('checked') ) {
					img.addClass(options.imgItemCheckedClass);
				}

				img.on('click', function(e) {
					jQuery(this)
						.prev('input[type="radio"]')
						.prop('checked', true)
						.trigger('change');

					syncClassChecked(jQuery(this));
				} );
			});
		}
	}) (jQuery);     
